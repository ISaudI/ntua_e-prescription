CREATE TABLE VISIT 
(
  VISIT_ID NUMBER NOT NULL 
, PATIENT_AMKA NUMBER 
, DOCTOR_AMKA NUMBER 
, DRUG_LIST VARCHAR2(20) 
, PRESCRIPTION_DATE DATE 
, EXECUTION_DATE DATE 
, DRUG_MONEY NUMBER 
, PATIENT_PERCENTAGE_PAYMENT VARCHAR2(20) 
, PHARMACY_ID NUMBER 
, PATIENT_ID NUMBER 
, STORE_ID NUMBER 
, CONSTRAINT VISIT_PK PRIMARY KEY 
  (
    VISIT_ID 
  )
  ENABLE 
);

CREATE TABLE PHARMACY 
(
  STORE_ID NUMBER NOT NULL 
, NAME VARCHAR2(20) 
, LICENSE_NUMBER NUMBER 
, PHONE NUMBER 
, ADDRESS VARCHAR2(20) 
, CONSTRAINT PHARMACY_PK PRIMARY KEY 
  (
    STORE_ID 
  )
  ENABLE 
);

CREATE TABLE PAYMENTS 
(
  PAYMENT_ID VARCHAR2(20) NOT NULL 
, VISIT_ID VARCHAR2(20) 
, DOCTOR_AMKA VARCHAR2(20) 
, STORE_ID NUMBER 
, CONSTRAINT PAYMENTS_PK PRIMARY KEY 
  (
    PAYMENT_ID 
  )
  ENABLE 
);

CREATE TABLE PATIENT 
(
  PATIENT_ID NUMBER NOT NULL 
, FKA_ACTIVE NUMBER 
, AMKA NUMBER NOT NULL 
, AFM NUMBER 
, AT VARCHAR2(20) 
, NAME VARCHAR2(20) 
, SURNAME VARCHAR2(20) 
, TOWN VARCHAR2(20) 
, STREET VARCHAR2(20) 
, STREET_NUMBER NUMBER 
, POSTAL_CODE NUMBER 
, PHONE NUMBER 
, MOBILE NUMBER 
, EMAIL VARCHAR2(20) 
, PRESCRIPTION_AMOUNT NUMBER 
, FKA_RECORD VARCHAR2(20) 
, CONSTRAINT PATIENTS_PK PRIMARY KEY 
  (
    AMKA 
  )
  ENABLE 
);

CREATE TABLE FKA_PHARMACY 
(
  FKA_PHARMACY_ID NUMBER NOT NULL 
, FKA_ID NUMBER 
, STORE_ID NUMBER 
, CONSTRAINT FKA_PHARMACY_PK PRIMARY KEY 
  (
    FKA_PHARMACY_ID 
  )
  ENABLE 
);

CREATE TABLE FKA_PATIENT 
(
  FKA_PATIENT_ID NUMBER NOT NULL 
, PATIENT_AMKA NUMBER 
, FKA_ID NUMBER 
, CONSTRAINT FKA_PATIENT_PK PRIMARY KEY 
  (
    FKA_PATIENT_ID 
  )
  ENABLE 
);

CREATE TABLE FKA_DOCTORS 
(
  FKA_DOCTORS_ID NUMBER NOT NULL 
, FKA_ID NUMBER 
, DOCTOR_AMKA NUMBER 
, CONSTRAINT FKA_DOCTORS_PK PRIMARY KEY 
  (
    FKA_DOCTORS_ID 
  )
  ENABLE 
);

CREATE TABLE FKA 
(
  FKA_ID NUMBER NOT NULL 
, NAME VARCHAR2(20) 
, CONSTRAINT FKA_PK PRIMARY KEY 
  (
    FKA_ID 
  )
  ENABLE 
);

CREATE TABLE DOCTOR 
(
  DOCTOR_ID NUMBER NOT NULL 
, AMKA NUMBER NOT NULL 
, PAYMENT NUMBER 
, USERNAME VARCHAR2(20) 
, PASSWORD VARCHAR2(20) 
, ARTSAY NUMBER 
, NAME VARCHAR2(20) 
, SURNAME VARCHAR2(20) 
, PHONE NUMBER 
, MOBILE NUMBER 
, EMAIL VARCHAR2(20) 
, INFIRMARY_ADDRESS VARCHAR2(20) 
, VISIT_AMOUNT NUMBER 
, PRESCTIPTION_AMOUNT NUMBER 
, CONSTRAINT DOCTOR_PK PRIMARY KEY 
  (
    AMKA 
  )
  ENABLE 
);

ALTER TABLE VISIT
ADD CONSTRAINT VISIT_DOCTOR_FK FOREIGN KEY
(
  DOCTOR_AMKA 
)
REFERENCES DOCTOR
(
  AMKA 
)
ENABLE;

ALTER TABLE VISIT
ADD CONSTRAINT VISIT_PATIENT_FK FOREIGN KEY
(
  PATIENT_AMKA 
)
REFERENCES PATIENT
(
  AMKA 
)
ENABLE;

ALTER TABLE VISIT
ADD CONSTRAINT VISIT_PHARMACY_FK FOREIGN KEY
(
  STORE_ID 
)
REFERENCES PHARMACY
(
  STORE_ID 
)
ENABLE;

ALTER TABLE PATIENT
ADD CONSTRAINT PATIENT_FKA_FK FOREIGN KEY
(
  FKA_ACTIVE 
)
REFERENCES FKA
(
  FKA_ID 
)
ENABLE;

ALTER TABLE FKA_PHARMACY
ADD CONSTRAINT FKA_PHARMACY_PHARMACY_FK FOREIGN KEY
(
  STORE_ID 
)
REFERENCES PHARMACY
(
  STORE_ID 
)
ENABLE;

ALTER TABLE FKA_PATIENT
ADD CONSTRAINT FKA_PATIENT_FKA_FK FOREIGN KEY
(
  FKA_ID 
)
REFERENCES FKA
(
  FKA_ID 
)
ENABLE;

ALTER TABLE FKA_PATIENT
ADD CONSTRAINT FKA_PATIENT_PATIENT_FK FOREIGN KEY
(
  PATIENT_AMKA 
)
REFERENCES PATIENT
(
  AMKA 
)
ENABLE;

ALTER TABLE FKA_DOCTORS
ADD CONSTRAINT FKA_DOCTORS_DOCTOR_FK FOREIGN KEY
(
  DOCTOR_AMKA 
)
REFERENCES DOCTOR
(
  AMKA 
)
ENABLE;

ALTER TABLE FKA_DOCTORS
ADD CONSTRAINT FKA_DOCTORS_FKA_FK FOREIGN KEY
(
  FKA_ID 
)
REFERENCES FKA
(
  FKA_ID 
)
ENABLE;

ALTER TABLE FKA
ADD CONSTRAINT FKA_FKA_PHARMACY_FK FOREIGN KEY
(
  FKA_ID 
)
REFERENCES FKA_PHARMACY
(
  FKA_PHARMACY_ID 
)
ENABLE;

CREATE SEQUENCE VISIT_SEQ;

CREATE SEQUENCE PHARMACY_SEQ;

CREATE SEQUENCE PAYMENTS_SEQ INCREMENT BY 1 START WITH 1 MINVALUE 1;

CREATE SEQUENCE FKA_PHARMACY_SEQ INCREMENT BY 1 START WITH 1 MINVALUE 1;

CREATE SEQUENCE FKA_PATIENT_SEQ INCREMENT BY 1 START WITH 1 MINVALUE 1;

CREATE SEQUENCE FKA_DOCTORS_SEQ INCREMENT BY 1 START WITH 1 MINVALUE 1;

CREATE TRIGGER VISIT_TRG BEFORE INSERT ON VISIT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.VISIT_ID IS NULL THEN
      SELECT VISIT_SEQ.NEXTVAL INTO :NEW.VISIT_ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

CREATE TRIGGER PHARMACY_TRG BEFORE INSERT ON PHARMACY 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.STORE_ID IS NULL THEN
      SELECT PHARMACY_SEQ.NEXTVAL INTO :NEW.STORE_ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

CREATE TRIGGER PAYMENTS_TRG BEFORE INSERT ON PAYMENTS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.PAYMENT_ID IS NULL THEN
      SELECT PAYMENTS_SEQ.NEXTVAL INTO :NEW.PAYMENT_ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

CREATE TRIGGER FKA_PHARMACY_TRG BEFORE INSERT ON FKA_PHARMACY 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.FKA_PHARMACY_ID IS NULL THEN
      SELECT FKA_PHARMACY_SEQ.NEXTVAL INTO :NEW.FKA_PHARMACY_ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

CREATE TRIGGER FKA_PATIENT_TRG BEFORE INSERT ON FKA_PATIENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.FKA_PATIENT_ID IS NULL THEN
      SELECT FKA_PATIENT_SEQ.NEXTVAL INTO :NEW.FKA_PATIENT_ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

CREATE TRIGGER FKA_DOCTORS_TRG BEFORE INSERT ON FKA_DOCTORS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.FKA_DOCTORS_ID IS NULL THEN
      SELECT FKA_DOCTORS_SEQ.NEXTVAL INTO :NEW.FKA_DOCTORS_ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
